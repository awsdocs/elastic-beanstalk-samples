###################################################################################################
#### Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
####
#### Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file
#### except in compliance with the License. A copy of the License is located at
####
####     http://aws.amazon.com/apache2.0/
####
#### or in the "license" file accompanying this file. This file is distributed on an "AS IS"
#### BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#### License for the specific language governing permissions and limitations under the License.
###################################################################################################

###################################################################################################
#### The following file configures a new service, on each Amazon Linux instance in the environment,
#### that publishes logs to S3 upon instance shutdown. An example use case for this would be for
#### root cause analysis after an instance terminates.
#### 
#### The configuration below enables LogPublicationControl allowing log rotation to S3 perodically.
#### A service is then created named "publishlogs" which, upon shutdown, will push the latest
#### logs to S3. These logs are then available on S3 from this location:
####
#### <s3 bucket>/resources/environments/logs/publish/<environment id>/<instance id>/<log name>
####
#### Please note for near realtime "Log Streaming" please have a look here:
#### http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.cloudwatchlogs.html
###################################################################################################

option_settings:
    aws:elasticbeanstalk:hostmanager:
        LogPublicationControl: true

services:
    sysvinit:
        publishlogs:
            enabled: true
            ensureRunning: true

files:
    "/etc/init.d/publishlogs":
        group: "root"
        owner: "root"
        mode: "000755"
        content: |
            #!/bin/sh
            #
            # publishlogs      PublishLogs on instance shutdown
            #
            # chkconfig 2345 100 00
            # description: this mock service will cause the instance to publish logs at \
            #              instance shutdown, preventing logs from being lost.
            #
            
            ### BEGIN INIT INFO
            # Provides: publishlogs
            # Required-Start:
            # Required-Stop: $network 
            # Default-Start: 2 3 4 5
            # Default-Stop: 0 1 6
            # Short-Description: PublishLogs on instance shutdown
            # Description: this mock service will cause the instance to publish logs at
            #              instance shutdown, preventing logs from being lost.
            ### END INIT INFO
            
            # Source funciton library
            . /etc/rc.d/init.d/functions
            
            prog="publishlogs"
            lockfile=/var/lock/subsys/$prog
            
            [ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog
            
            start() {
                touch $lockfile
            }
            
            stop() {
                echo $"Attempting to publish the remaining logs before shutdown..."
                run-parts /etc/cron.hourly/
                sleep 5
                /usr/bin/publishLogs.py --de-dupe --conf-path '/opt/elasticbeanstalk/tasks/publishlogs.d/*' --location-prefix resources/environments/logs/publish/ --num-concurrent 2 
                /usr/bin/clearStaleLogPublishingRecords.py
                echo $"Log rotation to S3 completed."
                rm $lockfile
            }
            
            restart() {
                stop
                start
            }
            
            rh_status() {
                echo $"$prog is not a service, checking for lockfile..."
                if ! [ -e $lockfile ]
                then
                    echo $"$lockfile missing!"
                    /bin/false
                fi
            }
            
            rh_status_q() {
                rh_status >/dev/null 2>&1
            }
            
            case $1 in
                start)
                    rh_status_q && exit 0
                    $1
                    ;;
                stop)
                    rh_status_q || exit 0
                    $1
                    ;;
                restart)
                    $1
                    ;;
                status)
                    rh_status
                    ;;
                *)
                    echo $"Usage: $0 {start|stop|status|restart}"
                    exit 2
            esac
            
            exit $?
