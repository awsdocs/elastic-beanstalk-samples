###################################################################################################
#### Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
####
#### Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file
#### except in compliance with the License. A copy of the License is located at
####
#### http://aws.amazon.com/apache2.0/
####
#### or in the "license" file accompanying this file. This file is distributed on an "AS IS"
#### BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#### License for the specific language governing permissions and limitations under the License.
###################################################################################################

###################################################################################################
#### This configuration file uses powershell to add write permission to a custom IIS folder.
#### Its allowing DefaultAppPool to write in custom IIS folder "C:\inetpub\wwwroot\uploads"
#### You can change the path as per your use-case or to the path your application wants to write
###################################################################################################

files:
  "C:\\scripts\\permissions.ps1":
    content: |
      Import-Module WebAdministration
      $appPoolName='DefaultAppPool'
      $folderDirectory='C:\inetpub\wwwroot\uploads'

      $appPoolSid = (Get-ItemProperty IIS:\AppPools\$appPoolName).applicationPoolSid
      $identifier = New-Object System.Security.Principal.SecurityIdentifier $appPoolSid
      $user = $identifier.Translate([System.Security.Principal.NTAccount])

      $acl = Get-Acl $folderDirectory
      $acl.SetAccessRuleProtection($True, $False)
      $rule = New-Object System.Security.AccessControl.FileSystemAccessRule($user,”FullControl”, “ContainerInherit, ObjectInherit”, “None”, “Allow”)
      $acl.AddAccessRule($rule)

container_commands :
  set_permission:
    command: powershell.exe -ExecutionPolicy Bypass -Command "C:\\scripts\\permissions.ps1"
    ignoreErrors: false
    waitAfterCompletion: 5
