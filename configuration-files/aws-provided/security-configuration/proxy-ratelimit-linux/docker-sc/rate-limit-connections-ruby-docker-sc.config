###################################################################################################
#### Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
####
#### Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file
#### except in compliance with the License. A copy of the License is located at
####
####     http://aws.amazon.com/apache2.0/
####
#### or in the "license" file accompanying this file. This file is distributed on an "AS IS"
#### BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#### License for the specific language governing permissions and limitations under the License.
###################################################################################################

###################################################################################################
#### This configuration file configures Nginx for Single Container Docker environments to rate limit
#### the amount of unique inbound connections to 1 connection per second with a burst of 10.
####
#### Note there are different HTTP headers used by Nginx for Load Balanced and Single Instance 
#### Environments for detecting the source IP address. Load Balanced environments will use the
#### "HTTP_X_FORWARDED_FOR" header and Single Instance will use "REMOTE_ADDR". Configure this for
#### your environment below on the line "limit_req_zone".
###################################################################################################

files:
   "/etc/nginx/conf.d/rate-limit.conf":
     owner: root
     group: root
     mode: "000644"
     content: |
       # limit the number of connections to 1 per second and allow to burst to 10
       limit_req_zone $http_x_forwarded_for zone=application:10m rate=1r/s; # For Load Balanced environments
       #limit_req_zone $remote_addr zone=application:10m rate=1r/s; # For Single Instance environments

       limit_req zone=application burst=10 nodelay;
       limit_req_status 429;
       limit_conn_status 429;

       # pass real IP from client to NGINX
       real_ip_header X-Forwarded-For;
       set_real_ip_from 0.0.0.0/0;

       server {
           # set error page for HTTP code 429
           error_page 429 @ratelimit;

           location @ratelimit {
               return 429 'Connection Limit Exceeded\n';
           }
       }
