###################################################################################################
#### Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
####
#### Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file
#### except in compliance with the License. A copy of the License is located at
####
####     http://aws.amazon.com/apache2.0/
####
#### or in the "license" file accompanying this file. This file is distributed on an "AS IS"
#### BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#### License for the specific language governing permissions and limitations under the License.
###################################################################################################

###################################################################################################
#### This configuration file downloads a private key from Amazon S3 and configures nginx to use it
#### to terminate HTTPS connections on port 443. Replace the values in the Parameters section with
#### the URL of the private key in Amazon S3, and the contents of the public certificate. To
#### download the file, your environment's instance profile must have S3ReadOnlyAccess or a similar
#### policy attached. In a single instance environment, also include 
#### https-singleinstance-securitygroup.config to allow traffic to the instance on port 443.
###################################################################################################

Parameters:
  privatekey: 
    Type: String
    Description: "The path to the private key in Amazon S3"
    Default: "https://s3-region.amazonaws.com/bucketname/privatekey.key"
  publiccert:
    Type: String
    Description: "The public certificate"
    Default: |
      -----BEGIN CERTIFICATE-----
      Paste your public certificate content here
      -----END CERTIFICATE-----

##############################################
#### Do not modify values below this line ####
##############################################

files:
  # nginx HTTPS configuration
  /etc/nginx/conf.d/https.conf:
    content: |
      # HTTPS server

      server {
          listen       443;
          server_name  localhost;
          
          ssl                  on;
          ssl_certificate      /etc/pki/tls/certs/server.crt;
          ssl_certificate_key  /etc/pki/tls/certs/server.key;
          
          ssl_session_timeout  5m;
          
          ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
          ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
          ssl_prefer_server_ciphers   on;
          
          location / {
              proxy_pass  http://my_app;
              proxy_set_header        Host            $host;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          }

          # Location has a final backslash to avoid matching valid Rails routes that may start
          # with assets*, for example a controller assets_pickers_controller
          location /assets/ {
            alias /var/app/current/public/assets/;
            gzip_static on;
            gzip on;
            expires max;
            add_header Cache-Control public;
          }

          # Location has a final backslash to avoid matching valid Rails routes that may start
          # with public*, for example a controller public_profiles_controller
          location /public/ {
            alias /var/app/current/public/;
            gzip_static on;
            gzip on;
            expires max;
            add_header Cache-Control public;
          }
      }

  # Public certificate
  /etc/pki/tls/certs/server.crt:
    mode: "000400"
    owner: root
    group: root
    content: { "Ref": "publiccert"}

  # Private key
  /etc/pki/tls/certs/server.key:
    mode: "000400"
    owner: root
    group: root
    authentication: "S3Auth"
    source: { "Ref" : "privatekey" }

container_commands:
  01restart_nginx:
    command: "service nginx restart"

Resources:
  # Use instance profile to authenticate to S3 bucket that contains the private key
  AWSEBAutoScalingGroup:
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          type: "s3"
          roleName: 
            "Fn::GetOptionSetting": 
              Namespace: "aws:autoscaling:launchconfiguration"
              OptionName: "IamInstanceProfile"
              DefaultValue: "aws-elasticbeanstalk-ec2-role"
